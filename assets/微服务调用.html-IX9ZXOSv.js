import{_ as e}from"./微服务调用interface-0lo2KwMo.js";import{_ as t,c as i,o as a,a as o}from"./app-B-c9igpO.js";const c={},r=o('<h1 id="微服务调用" tabindex="-1"><a class="header-anchor" href="#微服务调用"><span>微服务调用</span></a></h1><ul><li>微服务一般使用 <code>Dubbo</code> 或者 <code>OpenFeign</code> 进行远程调用，如下方那样对吧，直接调用接口方法就可以调用其他微服务模块</li></ul><figure><img src="'+e+'" alt="微服务调用interface" tabindex="0" loading="lazy"><figcaption>微服务调用interface</figcaption></figure><ul><li><p>目前 SecureApi 不能自动对 interface 方法上的参数进行加密，调用方需要手动加密参数后发送请求，也就是 @Autowired 注入 SecureApi 提供的 <code>CipherUtils</code> 手动加密 str ，然后调用 &quot;feign&quot; 方法把加密的 &quot;str&quot; 传进去。</p></li><li><p>然后被调用方也引入 SecureApi ，微服务各模块设置 <em>相同</em> 的加密模式和 key，被调用方那边就不需要手动操作了，参数解密和返回值加密都会是自动化的</p></li></ul><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>也就是说目前调用方需要手动加密参数，后续版本会增加对微服务调用自动加密参数的支持，开发中...</p></div>',5),n=[r];function s(l,p){return a(),i("div",null,n)}const u=t(c,[["render",s],["__file","微服务调用.html.vue"]]),_=JSON.parse('{"path":"/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8.html","title":"微服务调用","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1720414013000,"contributors":[{"name":"XuYijie","email":"1119461672@qq.com","commits":1}]},"filePathRelative":"微服务调用.md"}');export{u as comp,_ as data};
