import{_ as n,c as s,o as a,a as e}from"./app-CeTkfcIb.js";const p={},t=e(`<h1 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h1><blockquote><p>有两种配置方法， <code>yml</code> 和 <code>Bean</code> 方式，看你喜欢哪一个，如果是对安全性要求较高，建议使用 <code>Bean</code> 方式动态设置密钥，而不是写在 <code>yml</code> 里。</p></blockquote><h2 id="yml模式" tabindex="-1"><a class="header-anchor" href="#yml模式"><span>yml模式</span></a></h2><blockquote><p>下面是 <code>yml</code> 的完整配置，有些配置项是可选的，在注解中均已解释</p></blockquote><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="line"><span class="token key atrule">secure-api</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token comment"># 开启SecureApi功能，如果为false则其余配置项均不生效</span></span>
<span class="line">  <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">  <span class="token comment"># 开启加解密日志打印，会打印出接口名、加密模式、算法、明文和密文等信息</span></span>
<span class="line">  <span class="token key atrule">show-log</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">  <span class="token comment"># 加密模式，common和session_key可选，session_key是会话密钥模式，用于每次请求都使用不同的密钥，需要前端配合</span></span>
<span class="line">  <span class="token key atrule">mode</span><span class="token punctuation">:</span> common</span>
<span class="line">  <span class="token comment"># 加密算法</span></span>
<span class="line">  <span class="token key atrule">cipher-algorithm</span><span class="token punctuation">:</span> rsa_ecb_sha256</span>
<span class="line">  <span class="token comment"># session_key模式配置项，与前端协商的会话密钥类型，common模式下此配置不生效</span></span>
<span class="line">  <span class="token key atrule">session-key-cipher-algorithm</span><span class="token punctuation">:</span> aes_ecb_pkcs5</span>
<span class="line">  <span class="token comment"># 对称算法用于加解密的密钥，cipher-algorithm选择对称加密算法时配置，也可为空，组件会随机生成一个</span></span>
<span class="line">  <span class="token key atrule">key</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token comment"># 对称算法用于加解密的偏移量，cipher-algorithm选择对称加密算法时配置，也可为空，组件会随机生成一个</span></span>
<span class="line">  <span class="token key atrule">iv</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token comment"># 非对称算法用于加密的公钥，cipher-algorithm选择非对称加密算法时配置，也可为空，组件会随机生成一对</span></span>
<span class="line">  <span class="token key atrule">public-key</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token comment"># 非对称算法用于解密的私钥，cipher-algorithm选择非对称加密算法时配置，也可为空，组件会随机生成一对</span></span>
<span class="line">  <span class="token key atrule">private-key</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token comment"># 需要加密的接口路径匹配，遵循spring boot拦截器的正则规则，留空或者不配置代表不使用url匹配，只对注解的接口进行解密</span></span>
<span class="line">  <span class="token key atrule">encrypt-url</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 配置了此项，接口有无注解都将进行返回值加密</span></span>
<span class="line">    <span class="token key atrule">include-urls</span><span class="token punctuation">:</span> /<span class="token important">**</span></span>
<span class="line">    <span class="token comment"># 即使配置了排除，注解的优先级也高于此项</span></span>
<span class="line">    <span class="token key atrule">exclude-urls</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token comment"># 需要解密的接口路径匹配，遵循spring boot拦截器的正则规则，留空或者不配置代表不使用url匹配，只对注解的接口、参数、字段进行解密</span></span>
<span class="line">  <span class="token key atrule">decrypt-url</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 配置了此项，接口、参数、字段有无注解都将进行解密</span></span>
<span class="line">    <span class="token key atrule">include-urls</span><span class="token punctuation">:</span> /<span class="token important">**</span></span>
<span class="line">    <span class="token comment"># 即使配置了排除，注解的优先级也高于此项</span></span>
<span class="line">    <span class="token key atrule">exclude-urls</span><span class="token punctuation">:</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="bean方式" tabindex="-1"><a class="header-anchor" href="#bean方式"><span>Bean方式</span></a></h2><blockquote><p>注意，一旦使用了 <code>Bean</code> 方式来配置，<code>yml</code> 里的配置项都将失效</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">icu<span class="token punctuation">.</span>xuyijie<span class="token punctuation">.</span>secureapi<span class="token punctuation">.</span>cipher<span class="token punctuation">.</span></span><span class="token class-name">CipherAlgorithmEnum</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">icu<span class="token punctuation">.</span>xuyijie<span class="token punctuation">.</span>secureapi<span class="token punctuation">.</span>cipher<span class="token punctuation">.</span></span><span class="token class-name">CipherUtils</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">icu<span class="token punctuation">.</span>xuyijie<span class="token punctuation">.</span>secureapi<span class="token punctuation">.</span>cipher<span class="token punctuation">.</span></span><span class="token class-name">RsaKeyPair</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">icu<span class="token punctuation">.</span>xuyijie<span class="token punctuation">.</span>secureapi<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">SecureApiProperties</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">icu<span class="token punctuation">.</span>xuyijie<span class="token punctuation">.</span>secureapi<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">SecureApiPropertiesConfig</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringBootConfiguration</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@SpringBootConfiguration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecureApiConfig</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 这里的配置了Bean会导致yml配置的数据失效</span>
<span class="line">     * <span class="token keyword">@return</span> SecureApiPropertiesConfig</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">SecureApiPropertiesConfig</span> <span class="token function">secureApiPropertiesConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">SecureApiPropertiesConfig</span> secureApiPropertiesConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecureApiPropertiesConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        secureApiPropertiesConfig<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        secureApiPropertiesConfig<span class="token punctuation">.</span><span class="token function">setShowLog</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        secureApiPropertiesConfig<span class="token punctuation">.</span><span class="token function">setMode</span><span class="token punctuation">(</span><span class="token class-name">SecureApiProperties<span class="token punctuation">.</span>Mode</span><span class="token punctuation">.</span><span class="token constant">COMMON</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        secureApiPropertiesConfig<span class="token punctuation">.</span><span class="token function">setCipherAlgorithmEnum</span><span class="token punctuation">(</span><span class="token class-name">CipherAlgorithmEnum</span><span class="token punctuation">.</span><span class="token constant">RSA_ECB_SHA256</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 密钥可以不设置，组件会自动生成一个，并打印在控制台，如果需要手动生成，只需要使用组件提供的CipherUtils</span></span>
<span class="line">        <span class="token class-name">CipherUtils</span> cipherUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CipherUtils</span><span class="token punctuation">(</span><span class="token class-name">CipherAlgorithmEnum</span><span class="token punctuation">.</span><span class="token constant">RSA_ECB_SHA256</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 因为我们选择的是非对称加密RSA，所以生成一个密钥对，getRandomRsaKeyPair(&quot;1&quot;)可传入seed参数，在测试时可用于控制每次生成的密钥相同</span></span>
<span class="line">        <span class="token class-name">RsaKeyPair</span> randomRsaKeyPair <span class="token operator">=</span> cipherUtils<span class="token punctuation">.</span><span class="token function">getRandomRsaKeyPair</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 把生成的密钥对设置到secureApiPropertiesConfig</span></span>
<span class="line">        secureApiPropertiesConfig<span class="token punctuation">.</span><span class="token function">setPublicKey</span><span class="token punctuation">(</span>randomRsaKeyPair<span class="token punctuation">.</span><span class="token function">getPublicKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        secureApiPropertiesConfig<span class="token punctuation">.</span><span class="token function">setPrivateKey</span><span class="token punctuation">(</span>randomRsaKeyPair<span class="token punctuation">.</span><span class="token function">getPrivateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 不需要使用url匹配功能可以删除掉下面两行，或者传入空数组</span></span>
<span class="line">        <span class="token comment">// secureApiPropertiesConfig.setEncryptUrl(new SecureApiProperties.UrlPattern(Arrays.asList(&quot;/**&quot;), new ArrayList&lt;&gt;()));</span></span>
<span class="line">        <span class="token comment">// secureApiPropertiesConfig.setDecryptUrl(new SecureApiProperties.UrlPattern(Arrays.asList(&quot;/**&quot;), Arrays.asList(&quot;/secureApiTest/testForm&quot;)));</span></span>
<span class="line">        <span class="token keyword">return</span> secureApiPropertiesConfig<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),c=[t];function l(i,o){return a(),s("div",null,c)}const r=n(p,[["render",l],["__file","配置.html.vue"]]),k=JSON.parse('{"path":"/%E9%85%8D%E7%BD%AE.html","title":"配置","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"yml模式","slug":"yml模式","link":"#yml模式","children":[]},{"level":2,"title":"Bean方式","slug":"bean方式","link":"#bean方式","children":[]}],"git":{"updatedTime":1719406391000,"contributors":[{"name":"XuYijie","email":"1119461672@qq.com","commits":1}]},"filePathRelative":"配置.md"}');export{r as comp,k as data};
