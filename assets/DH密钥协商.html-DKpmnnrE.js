import{_ as n}from"./DH密钥协商工具类示例输出-B0hvIEJX.js";import{_ as s,c as a,o as e,a as t}from"./app-CQ7WDuXT.js";const p={},c=t(`<h1 id="dh密钥协商" tabindex="-1"><a class="header-anchor" href="#dh密钥协商"><span>DH密钥协商</span></a></h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>客户端和服务端各自生成自己的 <code>RSA</code> 密钥对对并交换公钥，采用 <code>DiffieHellman</code> 算法使用自己的私钥和对方的公钥，客户端和服务端会生成相同的 <code>AES</code> 对称加密密钥， 后续，客户端和服务器验证这个协商密钥，验证成功就使用这个 <code>AES</code> 密钥来加解密，因为这个密钥从未在网络上暴露过，因此是安全的。</p><h2 id="协商流程" tabindex="-1"><a class="header-anchor" href="#协商流程"><span>协商流程</span></a></h2><p>使用 DH 密钥协商需要后端使用 SecureApi 设置加密模式为 <code>common</code>，指定加密算法为 <code>AES</code>，不能是其他算法，因为 DH 协商出来的密钥是 <code>AES</code> 的密钥</p><blockquote><ul><li>后端使用 <code>CipherUtils</code> 或者在线网站生成 <code>RSA</code> 密钥对保存在服务器，等待前端协商信号</li><li>第一次通信：前端生成 <code>RSA</code> 密钥对，然后向后端发送协商密钥的请求，并把公钥发送给前端（公钥在网络传输无妨，后面会校验），后端接收到请求后，使用自己的私钥和前端传来的公钥生成一个<code>协商密钥</code> 保存在 <code>SecureApiPropertiesConfig</code> 的 <code>key</code> 字段中，然后把自己的公钥返回给前端，前端拿到后端公钥后，同样使用此公钥和自己的私钥生成<code>协商密钥</code></li><li>第二次通信：前端使用<code>协商密钥</code>加密一个任意数据，发送给后端，后端看看是否能使用<code>协商密钥</code> 成功解密，如果成功，则协商成功，后续前后端使用<code>协商密钥</code>进行加解密，如果解密失败，除了代码原因，就可能是<code>公钥</code> 传输过程中被篡改，此时要重新协商</li><li>协商成功后，前后端就各自拥有了一个相同的对称密钥，后续使用这个密钥加解密就可以了，这个密钥从未在网络上暴露过，因此是安全的。你也可以定期重新协商来增强安全性</li></ul></blockquote><h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h2><ul><li>安全，虽然相较于 <code>session-key</code> 模式还是差了点，但是协商流程要比 <code>session-key</code> 更简单</li><li>相较于 <code>session-key</code> 模式，每次请求少了一次 <code>RSA</code> 私钥解密会话密钥的计算，性能更高（不要小看私钥解密的性能消耗）</li></ul><h2 id="diffiehellmanutils" tabindex="-1"><a class="header-anchor" href="#diffiehellmanutils"><span>DiffieHellmanUtils</span></a></h2><p>SecureApi 提供了 DH 密钥协商的工具类：<code>DiffieHellmanUtils</code>，下面介绍工具类的方法。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 后端生成DH密钥对，并把公钥发送给前端</span></span>
<span class="line">    <span class="token class-name">KeyPair</span> serverKeyPair <span class="token operator">=</span> <span class="token class-name">DiffieHellmanUtils</span><span class="token punctuation">.</span><span class="token function">getDhKeyPairs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 前端生成密钥对，并把公钥发送给后端</span></span>
<span class="line">    <span class="token class-name">KeyPair</span> clientKeyPair <span class="token operator">=</span> <span class="token class-name">DiffieHellmanUtils</span><span class="token punctuation">.</span><span class="token function">getDhKeyPairs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 后端根据自己的私钥和前端公钥生成协商密钥</span></span>
<span class="line">    <span class="token class-name">String</span> serverSharedSecretString <span class="token operator">=</span> <span class="token class-name">DiffieHellmanUtils</span><span class="token punctuation">.</span><span class="token function">createSharedSecret</span><span class="token punctuation">(</span>serverKeyPair<span class="token punctuation">.</span><span class="token function">getPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> clientKeyPair<span class="token punctuation">.</span><span class="token function">getPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 前端根据自己的私钥和后端公钥生成协商密钥</span></span>
<span class="line">    <span class="token class-name">String</span> clientSharedSecretString <span class="token operator">=</span> <span class="token class-name">DiffieHellmanUtils</span><span class="token punctuation">.</span><span class="token function">createSharedSecret</span><span class="token punctuation">(</span>clientKeyPair<span class="token punctuation">.</span><span class="token function">getPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> serverKeyPair<span class="token punctuation">.</span><span class="token function">getPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;服务端共享密钥：&quot;</span> <span class="token operator">+</span> serverSharedSecretString<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;客户端共享密钥：&quot;</span> <span class="token operator">+</span> clientSharedSecretString<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;是否相同：&quot;</span> <span class="token operator">+</span> clientSharedSecretString<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>serverSharedSecretString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 使用共享密钥加密</span></span>
<span class="line">    <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token string">&quot;Hello, 你 好/、\\\\！&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">CipherUtils</span> cipherUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CipherUtils</span><span class="token punctuation">(</span><span class="token class-name">CipherAlgorithmEnum</span><span class="token punctuation">.</span><span class="token constant">AES_ECB_PKCS5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> encrypt <span class="token operator">=</span> cipherUtils<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> serverSharedSecretString<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;加密后：&quot;</span> <span class="token operator">+</span> encrypt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 使用共享密钥解密</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;解密后：&quot;</span> <span class="token operator">+</span> cipherUtils<span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>encrypt<span class="token punctuation">,</span> serverSharedSecretString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+n+'" alt="运行结果" tabindex="0" loading="lazy"><figcaption>运行结果</figcaption></figure><h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span>说明</span></a></h2><p>DH 密钥协商本质是还是前后端各自保存一份密钥，只是增强了灵活性，SecureApi 还是使用 <code>common</code> 模式，配置 SecureApi 的时候把协商后的密钥设置到 <code>SecureApiPropertiesConfig</code> 的 <code>key</code> 字段就可以了。</p>',14),l=[c];function o(i,u){return e(),a("div",null,l)}const k=s(p,[["render",o],["__file","DH密钥协商.html.vue"]]),m=JSON.parse('{"path":"/DH%E5%AF%86%E9%92%A5%E5%8D%8F%E5%95%86.html","title":"DH密钥协商","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"协商流程","slug":"协商流程","link":"#协商流程","children":[]},{"level":2,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":2,"title":"DiffieHellmanUtils","slug":"diffiehellmanutils","link":"#diffiehellmanutils","children":[]},{"level":2,"title":"说明","slug":"说明","link":"#说明","children":[]}],"git":{"updatedTime":1720239956000,"contributors":[{"name":"XuYijie","email":"1119461672@qq.com","commits":3}]},"filePathRelative":"DH密钥协商.md"}');export{k as comp,m as data};
