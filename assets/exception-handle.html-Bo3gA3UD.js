import{_ as n,c as s,o as a,a as e}from"./app-yWSSgKME.js";const t={},p=e(`<h1 id="exception-handle" tabindex="-1"><a class="header-anchor" href="#exception-handle"><span>Exception Handle</span></a></h1><blockquote><p>When SecureApi fails, it throws a specific exception: <code>SecureApiException</code>, You can customize the global exception handler to handle this exception.</p></blockquote><p>Example：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@RestControllerAdvice</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">GlobalExceptionHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * Can be customized to handle SecureApi exceptions</span>
<span class="line">     *</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">request</span> request information</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">e</span>       SecureApiException</span>
<span class="line">     * <span class="token keyword">@return</span> Customize the return body, and the return result can also be encrypted here, if the url is configured to match /**, the return value will also be encrypted without comments</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">SecureApiException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">//@EncryptApi</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">ResultEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">bizExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">SecureApiException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;SecureApiException：{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getErrorMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">ResultEntity</span><span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getErrorMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),c=[p];function l(o,i){return a(),s("div",null,c)}const r=n(t,[["render",l],["__file","exception-handle.html.vue"]]),d=JSON.parse('{"path":"/en/exception-handle.html","title":"Exception Handle","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1720414013000,"contributors":[{"name":"XuYijie","email":"1119461672@qq.com","commits":2}]},"filePathRelative":"en/exception-handle.md"}');export{r as comp,d as data};
