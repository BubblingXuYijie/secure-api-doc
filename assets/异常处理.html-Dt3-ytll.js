import{_ as n,c as s,o as a,a as e}from"./app-DLL5XhxW.js";const p={},t=e(`<h1 id="异常处理" tabindex="-1"><a class="header-anchor" href="#异常处理"><span>异常处理</span></a></h1><blockquote><p>SecureApi 出错时会抛出特定异常：<code>SecureApiException</code>，你可以自定义全局异常处理器来处理此异常。</p></blockquote><p>示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@RestControllerAdvice</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">GlobalExceptionHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 可以自定义处理SecureApi异常</span>
<span class="line">     *</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">request</span> 请求信息</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">e</span>       SecureApi异常</span>
<span class="line">     * <span class="token keyword">@return</span> 自定义返回体，这里也可以进行返回结果加密，如果配置了 url 匹配 /** 这个返回值不加注解也会被加密</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">SecureApiException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">//@EncryptApi</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">ResultEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">bizExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">SecureApiException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;SecureApi异常：{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getErrorMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">ResultEntity</span><span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getErrorMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),c=[t];function l(o,i){return a(),s("div",null,c)}const r=n(p,[["render",l],["__file","异常处理.html.vue"]]),k=JSON.parse('{"path":"/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html","title":"异常处理","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1720414013000,"contributors":[{"name":"XuYijie","email":"1119461672@qq.com","commits":2}]},"filePathRelative":"异常处理.md"}');export{r as comp,k as data};
