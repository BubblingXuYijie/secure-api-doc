import{_ as n,c as s,o as a,a as t}from"./app-CBCdlrng.js";const e={},p=t(`<h1 id="diffiehellman密钥协商" tabindex="-1"><a class="header-anchor" href="#diffiehellman密钥协商"><span>DiffieHellman密钥协商</span></a></h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><blockquote><p>客户端和服务端各自生成自己的 <code>RSA</code> 密钥对对并交换公钥，采用 <code>DiffieHellman</code> 算法使用自己的私钥和对方的公钥，客户端和服务端会生成相同的 <code>AES</code> 对称加密密钥， 后续，客户端和服务器就使用这个 <code>AES</code> 密钥来加解密，因为这个密钥从未在网络上暴露过，因此是安全的。</p></blockquote><h2 id="协商流程" tabindex="-1"><a class="header-anchor" href="#协商流程"><span>协商流程</span></a></h2><blockquote></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 服务端生成DH密钥对，并把公钥发送给客户端</span></span>
<span class="line">    <span class="token class-name">KeyPair</span> serverKeyPair <span class="token operator">=</span> <span class="token function">getDhKeyPairs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 客户端生成密钥对，并把公钥发送给服务端，本来应该是根据服务端公钥携带的信息进行运算，但是信息中p和g是rfc3526定死的，大家都用固定的p和g，算出来的共享密钥就是一样的，所以这里不需要获取服务端公钥参数也可以</span></span>
<span class="line">    <span class="token comment">//DHParameterSpec dhParams = ((DHPublicKey) serverKeyPair.getPublic()).getParams()</span></span>
<span class="line">    <span class="token comment">//keyPairGen.initialize(dhParams)</span></span>
<span class="line">    <span class="token class-name">KeyPair</span> clientKeyPair <span class="token operator">=</span> <span class="token function">getDhKeyPairs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 服务端使用自己的私钥创建并初始化Key协议对象</span></span>
<span class="line">    <span class="token class-name">String</span> serverSharedSecretString <span class="token operator">=</span> <span class="token function">createSharedSecret</span><span class="token punctuation">(</span>serverKeyPair<span class="token punctuation">.</span><span class="token function">getPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> clientKeyPair<span class="token punctuation">.</span><span class="token function">getPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 客户端根据自己的私钥和服务端公钥生成共享密钥</span></span>
<span class="line">    <span class="token class-name">String</span> clientSharedSecretString <span class="token operator">=</span> <span class="token function">createSharedSecret</span><span class="token punctuation">(</span>clientKeyPair<span class="token punctuation">.</span><span class="token function">getPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> serverKeyPair<span class="token punctuation">.</span><span class="token function">getPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;服务端共享密钥：&quot;</span> <span class="token operator">+</span> serverSharedSecretString<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;客户端共享密钥：&quot;</span> <span class="token operator">+</span> clientSharedSecretString<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;是否相同：&quot;</span> <span class="token operator">+</span> clientSharedSecretString<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>serverSharedSecretString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 使用共享密钥加密</span></span>
<span class="line">    <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token string">&quot;Hello, 你 好/、\\\\！&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">CipherUtils</span> cipherUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CipherUtils</span><span class="token punctuation">(</span><span class="token class-name">CipherAlgorithmEnum</span><span class="token punctuation">.</span><span class="token constant">AES_ECB_PKCS5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> encrypt <span class="token operator">=</span> cipherUtils<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> serverSharedSecretString<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;加密后：&quot;</span> <span class="token operator">+</span> encrypt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;解密后：&quot;</span> <span class="token operator">+</span> encrypt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),c=[p];function l(o,i){return a(),s("div",null,c)}const r=n(e,[["render",l],["__file","DiffieHellman密钥协商.html.vue"]]),k=JSON.parse('{"path":"/DiffieHellman%E5%AF%86%E9%92%A5%E5%8D%8F%E5%95%86.html","title":"DiffieHellman密钥协商","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"协商流程","slug":"协商流程","link":"#协商流程","children":[]}],"git":{"updatedTime":1719421325000,"contributors":[{"name":"XuYijie","email":"1119461672@qq.com","commits":1}]},"filePathRelative":"DiffieHellman密钥协商.md"}');export{r as comp,k as data};
